//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RoutingServer.ProxyCacheServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProxyCacheServiceReference.IProxyCacheService")]
    public interface IProxyCacheService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCacheService/GetContracts", ReplyAction="http://tempuri.org/IProxyCacheService/GetContractsResponse")]
        SharedModels.models.Contract[] GetContracts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCacheService/GetContracts", ReplyAction="http://tempuri.org/IProxyCacheService/GetContractsResponse")]
        System.Threading.Tasks.Task<SharedModels.models.Contract[]> GetContractsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCacheService/GetStations", ReplyAction="http://tempuri.org/IProxyCacheService/GetStationsResponse")]
        SharedModels.models.Station[] GetStations(string contractName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCacheService/GetStations", ReplyAction="http://tempuri.org/IProxyCacheService/GetStationsResponse")]
        System.Threading.Tasks.Task<SharedModels.models.Station[]> GetStationsAsync(string contractName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCacheService/GetGeocode", ReplyAction="http://tempuri.org/IProxyCacheService/GetGeocodeResponse")]
        SharedModels.models.Position GetGeocode(string cityName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCacheService/GetGeocode", ReplyAction="http://tempuri.org/IProxyCacheService/GetGeocodeResponse")]
        System.Threading.Tasks.Task<SharedModels.models.Position> GetGeocodeAsync(string cityName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCacheService/GetRoute", ReplyAction="http://tempuri.org/IProxyCacheService/GetRouteResponse")]
        System.ValueTuple<SharedModels.models.Itinerary, SharedModels.models.Instructions> GetRoute(double startLat, double startLon, double endLat, double endLon, string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCacheService/GetRoute", ReplyAction="http://tempuri.org/IProxyCacheService/GetRouteResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<SharedModels.models.Itinerary, SharedModels.models.Instructions>> GetRouteAsync(double startLat, double startLon, double endLat, double endLon, string profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCacheService/GetAllStations", ReplyAction="http://tempuri.org/IProxyCacheService/GetAllStationsResponse")]
        SharedModels.models.Station[] GetAllStations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyCacheService/GetAllStations", ReplyAction="http://tempuri.org/IProxyCacheService/GetAllStationsResponse")]
        System.Threading.Tasks.Task<SharedModels.models.Station[]> GetAllStationsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProxyCacheServiceChannel : RoutingServer.ProxyCacheServiceReference.IProxyCacheService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProxyCacheServiceClient : System.ServiceModel.ClientBase<RoutingServer.ProxyCacheServiceReference.IProxyCacheService>, RoutingServer.ProxyCacheServiceReference.IProxyCacheService {
        
        public ProxyCacheServiceClient() {
        }
        
        public ProxyCacheServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProxyCacheServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProxyCacheServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProxyCacheServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SharedModels.models.Contract[] GetContracts() {
            return base.Channel.GetContracts();
        }
        
        public System.Threading.Tasks.Task<SharedModels.models.Contract[]> GetContractsAsync() {
            return base.Channel.GetContractsAsync();
        }
        
        public SharedModels.models.Station[] GetStations(string contractName) {
            return base.Channel.GetStations(contractName);
        }
        
        public System.Threading.Tasks.Task<SharedModels.models.Station[]> GetStationsAsync(string contractName) {
            return base.Channel.GetStationsAsync(contractName);
        }
        
        public SharedModels.models.Position GetGeocode(string cityName) {
            return base.Channel.GetGeocode(cityName);
        }
        
        public System.Threading.Tasks.Task<SharedModels.models.Position> GetGeocodeAsync(string cityName) {
            return base.Channel.GetGeocodeAsync(cityName);
        }
        
        public System.ValueTuple<SharedModels.models.Itinerary, SharedModels.models.Instructions> GetRoute(double startLat, double startLon, double endLat, double endLon, string profile) {
            return base.Channel.GetRoute(startLat, startLon, endLat, endLon, profile);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<SharedModels.models.Itinerary, SharedModels.models.Instructions>> GetRouteAsync(double startLat, double startLon, double endLat, double endLon, string profile) {
            return base.Channel.GetRouteAsync(startLat, startLon, endLat, endLon, profile);
        }
        
        public SharedModels.models.Station[] GetAllStations() {
            return base.Channel.GetAllStations();
        }
        
        public System.Threading.Tasks.Task<SharedModels.models.Station[]> GetAllStationsAsync() {
            return base.Channel.GetAllStationsAsync();
        }
    }
}
